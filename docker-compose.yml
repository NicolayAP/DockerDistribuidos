version: "3.9"

services:
  mysql:
    image: mysql:8.0
    container_name: store_mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: store_db
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin123
    ports:
      - "3306:3306"
    volumes:
      - store_mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - store-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  user-service:
    build: ./users-service
    container_name: user_service
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      DB_HOST: store_mysql
      DB_USER: admin
      DB_PASSWORD: admin123
      DB_NAME: store_db
      DB_PORT: 3306
    networks:
      - store-network

  product-service:
    build: ./products-service
    container_name: product_service
    restart: always
    ports:
      - "3001:3000"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      DB_HOST: store_mysql
      DB_USER: admin
      DB_PASSWORD: admin123
      DB_NAME: store_db
      DB_PORT: 3306
    networks:
      - store-network

  order-service:
    build: ./orders-service
    container_name: order_service
    restart: always
    ports:
      - "3002:3000"
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      DB_HOST: store_mysql
      DB_USER: admin
      DB_PASSWORD: admin123
      DB_NAME: store_db
      DB_PORT: 3306
    networks:
      - store-network

volumes:
  store_mysql_data:

networks:
  store-network:
    driver: bridge
